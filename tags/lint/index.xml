<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lint on Blogerinos</title>
    <link>/tags/lint/</link>
    <description>Recent content in lint on Blogerinos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 29 Jan 2020 10:04:03 +0000</lastBuildDate>
    
	<atom:link href="/tags/lint/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Call the police - we got a bandit.</title>
      <link>/2020/01/bandit/</link>
      <pubDate>Wed, 29 Jan 2020 10:04:03 +0000</pubDate>
      
      <guid>/2020/01/bandit/</guid>
      <description>The basics Today I would like to share with you some security lessons when using python. How we can use static linting to check our code for possible security flaws leveraging bandit. There will be some pretty obvious indicators of bad programming within this document, but only to demonstrate the power of the bandit. Not to highlight my inability to program. ☕️
First as always, we will create a virtual environment.</description>
    </item>
    
  </channel>
</rss>