<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Blog</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jan 2020 11:05:56 -0600</lastBuildDate>
    
	<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How I Made This Blog</title>
      <link>/posts/how-i-made-this-blog/</link>
      <pubDate>Wed, 29 Jan 2020 11:05:56 -0600</pubDate>
      
      <guid>/posts/how-i-made-this-blog/</guid>
      <description>Wait, thats it.. This is going to be short.
I use Hugo to dynamically generate all the content, and then use github pages to host it :)
How To</description>
    </item>
    
    <item>
      <title>Call the police - we got a bandit.</title>
      <link>/posts/bandit/</link>
      <pubDate>Wed, 29 Jan 2020 10:04:03 +0000</pubDate>
      
      <guid>/posts/bandit/</guid>
      <description>The basics Today I would like to share with you some security lessons when using python. How we can use static linting to check our code for possible security flaws leveraging bandit. There will be some pretty obvious indicators of bad programming within this document, but only to demonstrate the power of the bandit. Not to highlight my inability to program. ☕️
First as always, we will create a virtual environment.</description>
    </item>
    
    <item>
      <title>Describe all the things in AWS</title>
      <link>/posts/cross-account-information-gathering/</link>
      <pubDate>Wed, 29 Jan 2020 10:04:03 +0000</pubDate>
      
      <guid>/posts/cross-account-information-gathering/</guid>
      <description>How can I query multiple AWS accounts for a lot of information. Well theres a few ways we can do this. Honestly what I believe is that leveraging a cross account role in each account is one the best ways to approach this. This allows for us to have the one spot for control and access. If you have a way to deploy this role in an automated way, that would be best.</description>
    </item>
    
  </channel>
</rss>